-> Do the below programs in anonymous function and IIFE

1-> Print odd numbers in an array
const readline = require("readline");

const inp = readline.createInterface({
    input:process.stdin
});

const userInput = [];

inp.on("line", (data) => {
    userInput.push(data);
});

inp.on("close",() => {
    var myArray = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
    for(var i=1; i<10; i +=2){
        myArray.push(i);
    }
    console.log(myArray);
});


2-> Convert all the strings to title caps in a string array
const readline = require("readline");

const inp = readline.createInterface({
    input:process.stdin
});

const userInput = [];

inp.on("line", (data) => {
    userInput.push(data);
});

inp.on("close",() => {
   function titleCaps(str) { 
  str = str.toUpperCase().split(' '); 
  for (var i = 0; i < str.length; i++) { 
    str[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1);  
  } 
  return str.join(' '); 
} 
console.log(titleCaps("guvi zen classes")); 
});


3-> Sum of all numbers in an array
const readline = require("readline");

const inp = readline.createInterface({
    input:process.stdin
});

const userInput = [];

inp.on("line", (data) => {
    userInput.push(data);
});

inp.on("close",() => {
let arr = userInput[0].split(" ").map(Number);
let sumArr = (function(){return arr.reduce((accumulator,item) => accumulator+item);})();
console.log(sumArr);
});


4-> Return all the prime numbers in an array
const readline = require("readline");

const inp = readline.createInterface({
    input:process.stdin
});

const userInput = [];

inp.on("line", (data) => {
    userInput.push(data);
});

inp.on("close",() => {
const newArray = userInput[0].split(',');
 const isPrime = num => {
  for (let i = 2; i < num; i++) {
    if (num % i === 0) return false;
  }
  return num !== 1;
};
const myPrimeArray = (function (arr){return arr.filter(element => isPrime(element))})(newArray);
console.log(myPrimeArray);

5-> Return all the palindromes in an array
const readline = require("readline");

const inp = readline.createInterface({
    input:process.stdin
});

const userInput = [];

inp.on("line", (data) => {
    userInput.push(data);
});

inp.on("close",() => {
 const arr = userInput[0].split(",");
 const isPalindrome = el => {
   const str = String(el);
   let i = 0;
   let j = str.length - 1;
   while(i < j) {
      if(str[i] === str[j]) {
         i++;
         j--;
      }
      else {
         return false;
      }
   }
   return true;
};
const findPallindrome = ( arr =>{return arr.filter(el => isPallindrome(el));};)(arr);
};

};
console.log(findPalindrome(arr));

});


6-> Return median of two sorted arrays of same size
7-> Remove duplicates from an array
const readline = require("readline");

const inp = readline.createInterface({
    input:process.stdin
});

const userInput = [];

inp.on("line", (data) => {
    userInput.push(data);
});

inp.on("close",() => {
    function removeDuplicates(array) {
  return array.filter((a, b) => array.indexOf(a) === b)
}
let arr = userInput[0].split(" ").map(Number);
let uniqueArr = (function(){return [...new Set(arr)];})();
console.log(uniqueArr);
});


8-> Rotate an array by k times and return the rotated array
const readline = require("readline");
const inp = readline.createInterface({
  input: process.stdin
});
const userInput = [];
inp.on("line", (data) => {
    userInput.push(data);
  });
  inp.on("close", () => {
      
let arr = userInput[0].split(" ");
let titleCase = function (str) {
    str = str.split("");
    let char = str.splice(0, 1).toString().toUpperCase(); //converting first char toUpperCase
    str.unshift(char); //pushing that char to the beggining of existing string
    return str.join("");
  };

(function (arr) {
    let result = arr.map((ele) => {
    let strArray = ele.split(" "); //splitting the array elements
    let resultStr = strArray.map((item) => {return titleCase(item);}); //sending each string as a parameter to titleCase function
    return resultStr.join(" "); 
  });
  console.log(result.join(" "));
})(arr);

});